@using Microsoft.AspNetCore.Identity
@using Domain.Entities
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
        </li>
        <li class="nav-item">
            @if ( User.IsInRole("Super_Admin") ){
            <a class="nav-link text-dark" asp-area="Super_Admin" asp-controller="Admin" asp-action="Index"><span class="badge badge-danger">Super Admin</span></a>
            }
            @if ( User.IsInRole("Community_Admin")){

            <a class="nav-link text-dark" asp-area="Super_Admin" asp-controller="Communities" asp-action="ManageCommunity" asp-route-id="-1">
                <span class="badge badge-warning">Community Admin</span></a>
            }
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new {area = ""})">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>